---20240306Video about AWS EKS performance: done but difficult for me, I am not familar with aws platform operation, yaml,jobs pipline file, namespace, kustomize.SQL scripts study: methods, functions etc.https://www.youtube.com/watch?v=rM1BVoBke04git command         		 --20240307https://www.youtube.com/watch?v=HpL6EX2kjq4https://www.youtube.com/watch?v=Y6M1bz8jtT8--about TestNGhttps://www.youtube.com/watch?v=90F7dePW1vo&list=PLZMWkkQEwOPmHRq_F1Diai-sPDcXPAQOm&index=2cucumber (Behavior testing, Data Driven Testing)--20240311I watched a radio about TestNG, but he use lambdatest service, I think I need to build up a selenium git hub service.--20240312I want to learn sql scripts.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%HIVE_HOME%\lib\;%HIVE_HOME%\lib\mysql-connector-java-8.0.18.jar;C:\Program Files (x86)\PostgreSQL\pgJDBC\postgresql-42.2.18.jar;https://www.youtube.com/watch?v=KrUIQAcFptY&t=6sAzure https://www.youtube.com/watch?v=ZYa9aaFAOi8https://www.youtube.com/watch?v=DoWhZO7nbCY&t=1s---20240319pyspark write to table from csv file.https://www.linkedin.com/learning/etl-in-python-and-sql/scheduling-etl-jobs-with-airflow-part-2?dApp=53239054&leis=LAA&resume=false&u=2113185--20240325--python core--English small talk reviewThis error comes up because `new-item` is not a recognized command in `bash` shell. The `new-item` command is used in Windows PowerShell.If you're trying to create a new directory in `bash`, you would use `mkdir directory_name`.If you're trying to create a new file in `bash`, you would use `touch file_name`.SELECT id, sales, RANK() OVER (ORDER BY sales DESC) as sales_rankFROM SalesTable;In this SQL statement, for each row in the SalesTable, a rank (sales_rank) will be assigned based on the sales amount in descending order. So, the row with the highest sales gets the rank 1, next highest gets rank 2, and so on. If two rows have the same sales, they will get the same rank, and the next rank will be skipped.The DENSE_RANK() OVER() function in PostgreSQL is a window function that computes the rank of each row returned by a query with respect to the other rows, based on the values of the value expression(s). DENSE_RANK() differs from RANK() in that DENSE_RANK() will always give consecutive ranks.If two rows have the same sales, they will get the same rank, but unlike regular RANK(), the next rank will NOT be skipped.row_number()over()In this SQL statement, a unique row_number (sales_row_number) will be assigned to each row in the SalesTable, based on the order of sales amount in descending order. Even if two rows have the same sales, they will not get the same row number, each row will have a unique number.